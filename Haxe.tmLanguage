<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>hx</string>
		<string>hxsl</string>
		<string>hscript</string>
	</array>
	<key>foldingStartMarker</key>
	<string>(\{\s*(//.*)?$|^\s*// \{\{\{|#if)</string>
	<key>foldingStopMarker</key>
	<string>^\s*(\}|// \}\}\}$|#end)</string>
	<key>keyEquivalent</key>
	<string>^~H</string>
	<key>name</key>
	<string>Haxe</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#all</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>all</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#package</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#import</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#import-using</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type-abstract</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type-class</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type-enum</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type-interface</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type-typedef</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#meta-static</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#method</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block-contents</string>
				</dict>
			</array>
		</dict>
		<key>arrays</key>
		<dict>
			<key>begin</key>
			<string>(\[)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.array.begin.haxe.2</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\])</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.array.end.haxe.2</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.array.haxe.2</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block-contents</string>
				</dict>
			</array>
		</dict>
		<key>block</key>
		<dict>
			<key>begin</key>
			<string>(\{)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.block.begin.haxe.2</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\})</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.block.end.haxe.2</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block-contents</string>
				</dict>
			</array>
		</dict>
		<key>block-contents</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#regex</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#arrays</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#parameters</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constants</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#strings</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#macro</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#modifiers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keywords</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keywords-magic</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keywords-reification</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#conditional-compilation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#operator-assignment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#operators</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#punctuation-separator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#punctuation-terminator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#punctuation-brackets</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#support-class-name</string>
				</dict>
			</array>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(/\*)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.haxe.2</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\*/)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.haxe.2</string>
						</dict>
					</dict>
					<key>name</key>
					<string>comment.block.haxe.2</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.haxe.2</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(//).*$\n?</string>
					<key>name</key>
					<string>comment.line.double-slash.haxe.2</string>
				</dict>
			</array>
		</dict>
		<key>constants</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(true|false|null)\b</string>
					<key>name</key>
					<string>constant.language.haxe.2</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)\b</string>
					<key>name</key>
					<string>constant.numeric.haxe.2</string>
				</dict>
			</array>
		</dict>
		<key>entity-name-class</key>
		<dict>
			<key>match</key>
			<string>\b([_A-Za-z]\w*)\b</string>
			<key>name</key>
			<string>entity.name.type.class.haxe.2</string>
		</dict>
		<key>entity-name-function</key>
		<dict>
			<key>match</key>
			<string>([_A-Za-z]\w*)\b(?=\s*[\(])</string>
			<key>name</key>
			<string>entity.name.function.haxe.2</string>
		</dict>
		<key>import</key>
		<dict>
			<key>begin</key>
			<string>\b(import)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.import.haxe.2</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(;)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.terminator.haxe.2</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.import.haxe.2</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.package.haxe.2</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>support.class.haxe.2</string>
						</dict>
					</dict>
					<key>match</key>
					<string>((\b[a-z]\w*\.)*)((\b[A-Z]\w*\.?|\*)+)(\b[_a-z]\w*|\*)?</string>
				</dict>
			</array>
		</dict>
		<key>import-using</key>
		<dict>
			<key>begin</key>
			<string>\b(using)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.using.haxe.2</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(;)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.terminator.haxe.2</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.using.haxe.2</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.package.haxe.2</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>support.class.haxe.2</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(([a-z]\w*\.)*)(([A-Z]\w*\.?)+)</string>
				</dict>
			</array>
		</dict>
		<key>conditional-compilation</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(#(end|else))</string>
					<key>name</key>
					<string>keyword.control.directive.conditional.haxe.2</string>
				</dict>
				<dict>
					<key>match</key>
					<string>((#(if|elseif))\s+([a-zA-Z0-9_]*)\s)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.control.directive.conditional.haxe.2</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.control.directive.conditional.haxe.2</string>
						</dict>
					</dict>
				</dict>
				<dict>
					<key>begin</key>
					<string>((#(if|elseif))\s*?\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>meta.control.directive.conditional.haxe.2</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.control.directive.conditional.haxe.2</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\))</string>
					<key>name</key>
					<string>meta.control.directive.conditional.haxe.2</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(#([a-zA-Z0-9_]*))\s</string>
					<key>name</key>
					<string>meta.control.directive.conditional.haxe.2</string>
				</dict>
			</array>
		</dict>
		<key>keywords</key>
		<dict>
			<key>patterns</key>
			<array>
				
				<dict>
					<key>match</key>
					<string>\b(try|catch|throw)\b</string>
					<key>name</key>
					<string>keyword.control.catch-exception.haxe.2</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(if|return|while|for|return|break|case|default|continue|do|while|for|switch|if|else)\b</string>
					<key>name</key>
					<string>keyword.control.haxe.flow-control.2</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\.\.\.)</string>
					<key>name</key>
					<string>keyword.control.directive.haxe.2</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(cast|untyped)\b</string>
					<key>name</key>
					<string>keyword.other.untyped.haxe.2</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\btrace\b</string>
					<key>name</key>
					<string>keyword.other.trace.haxe.2</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(this|super)\b</string>
					<key>name</key>
					<string>variable.language.haxe.2</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bnew\b</string>
					<key>name</key>
					<string>keyword.control.new.haxe.2</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(var|final)\b</string>
					<key>name</key>
					<string>storage.type.variable.haxe.2</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bfunction\b</string>
					<key>name</key>
					<string>storage.type.function.haxe.2</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(abstract|class|enum|interface|typedef)\b</string>
					<key>name</key>
					<string>storage.type.class.haxe.2</string>
				</dict>
			</array>
		</dict>
		<key>keywords-abstract</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(from|to)\b</string>
					<key>name</key>
					<string>keyword.other.haxe.2</string>
				</dict>
			</array>
		</dict>
		<key>keywords-accessor</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(default|get|set|dynamic|never|null)\b</string>
					<key>name</key>
					<string>keyword.other.haxe.2</string>
				</dict>
			</array>
		</dict>
		<key>keywords-magic</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b__\w*__\b</string>
					<key>name</key>
					<string>support.function.magic.haxe.2</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bprototype\b</string>
					<key>name</key>
					<string>support.variable.magic.haxe.2</string>
				</dict>
			</array>
		</dict>
		<key>keywords-reification</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.haxe.2</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.reification.haxe.2</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\$)([iea])\(</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.haxe.2</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>support.reification.haxe.2</string>
						</dict>
					</dict>
					<key>match</key>
					<string>((\$)([a-zA-Z.]*))</string>
				</dict>
			</array>
		</dict>
		<key>macro</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.haxe.2</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.macro.haxe.2</string>
						</dict>
					</dict>
					<key>match</key>
					<string>((@:)(require|final|hack|native|coreApi|fakeEnum|macro|build|keep|keepSub|overload|extern|optional|feature|noCompletion|noUsing|allow|access|generic|publicFields|expose|defineFeature|runtime|initPackage|bind|bitmap|file|font|sound|ns|protected|getter|setter|meta|debug|noDebug|headerCode|headerClassCode|cppFileCode|functionCode|functionTailCode|buildXml|cppNamespaceCode|headerNamespaceCode|noStack|depend|include|internal|volatile|transient|functionBody|classContents|remove)\b)</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.haxe.2</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>support.macro.haxe.2</string>
						</dict>
					</dict>
					<key>match</key>
					<string>((@:?)([a-zA-Z_]*))</string>
				</dict>
			</array>
		</dict>
		<key>meta-static</key>
		<dict>
			<key>begin</key>
			<string>(static)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.haxe.2</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?&lt;=[\};])</string>
			<key>name</key>
			<string>meta.static.haxe.2</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#modifiers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#method</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#punctuation-terminator</string>
				</dict>
			</array>
		</dict>
		<key>method</key>
		<dict>
			<key>begin</key>
			<string>(?=function)</string>
			<key>end</key>
			<string>(?&lt;=[\};])</string>
			<key>name</key>
			<string>meta.method.haxe.2</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#method-name</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#method-name-post</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#method-block</string>
				</dict>
			</array>
		</dict>
		<key>method-block</key>
		<dict>
			<key>begin</key>
			<string>(?&lt;=\{)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.block.begin.haxe.2</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\})</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.block.end.haxe.2</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.method.block.haxe.2</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block-contents</string>
				</dict>
			</array>
		</dict>
		<key>method-name</key>
		<dict>
			<key>begin</key>
			<string>\b(function)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.haxe.2</string>
				</dict>
			</dict>
			<key>end</key>
			<string>([_A-Za-z]\w*)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.haxe.2</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.method.name.haxe.2</string>
		</dict>
		<key>method-name-post</key>
		<dict>
			<key>begin</key>
			<string>(?&lt;=\w)</string>
			<key>end</key>
			<string>(\{)|(;)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.block.begin.haxe.2</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.terminator.haxe.2</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block-contents</string>
				</dict>
			</array>
		</dict>
		<key>modifiers</key>
		<dict>
			<key>match</key>
			<string>\b(public|private|static|dynamic|inline|macro|extern|override)\b</string>
			<key>name</key>
			<string>storage.modifier.haxe.2</string>
		</dict>
		<key>modifiers-inheritance</key>
		<dict>
			<key>match</key>
			<string>\b(implements|extends)\b</string>
			<key>name</key>
			<string>storage.modifier.haxe.2</string>
		</dict>
		<key>operator-assignment</key>
		<dict>
			<key>match</key>
			<string>(=)</string>
			<key>name</key>
			<string>keyword.operator.assignment.haxe.2</string>
		</dict>
		<key>operator-optional</key>
		<dict>
			<key>match</key>
			<string>(\?)(?!\s)</string>
			<key>name</key>
			<string>punctuation.definition.variable.haxe.2</string>
		</dict>
		<key>operators</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(!|&amp;&amp;|\|\|)</string>
					<key>name</key>
					<string>keyword.operator.logical.haxe.2</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(~|&amp;|\||\^|&lt;&lt;|&gt;&gt;|&gt;&gt;&gt;)</string>
					<key>name</key>
					<string>keyword.operator.bitwise.haxe.2</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(==|!=|&lt;=|&gt;=|&lt;&gt;|&lt;|&gt;)</string>
					<key>name</key>
					<string>keyword.operator.comparison.haxe.2</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\-\-|\+\+)</string>
					<key>name</key>
					<string>keyword.operator.increment-decrement.haxe.2</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\-|\+|\*|\/|%)</string>
					<key>name</key>
					<string>keyword.operator.arithmetic.haxe.2</string>
				</dict>
			</array>
		</dict>
		<key>package</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.package.haxe.2</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.package.haxe.2</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>punctuation.terminator.haxe.2</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(package)(\s+([\w.*]*))?\s*(;)</string>
			<key>name</key>
			<string>meta.package.haxe.2</string>
		</dict>
		<key>parameters</key>
		<dict>
			<key>begin</key>
			<string>(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.begin.haxe.2</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.end.haxe.2</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.parameters.haxe.2</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#operator-optional</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block-contents</string>
				</dict>
			</array>
		</dict>
		<key>punctuation-brackets</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>([\(\&lt;\)\&gt;])</string>
					<key>name</key>
					<string>punctuation.definition.other.haxe.2</string>
				</dict>
			</array>
		</dict>
		<key>punctuation-separator</key>
		<dict>
			<key>match</key>
			<string>([,:.?])</string>
			<key>name</key>
			<string>punctuation.separator.haxe.2</string>
		</dict>
		<key>punctuation-terminator</key>
		<dict>
			<key>match</key>
			<string>;</string>
			<key>name</key>
			<string>punctuation.terminator.haxe.2</string>
		</dict>
		<key>regex</key>
		<dict>
			<key>begin</key>
			<string>~/</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.regexp.begin.haxe.2</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/[gimsu]*)|(\n$)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.regexp.end.haxe.2</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.haxe.2</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.regexp.haxe.2</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.haxe.2</string>
				</dict>
			</array>
		</dict>
		<key>strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.haxe.2</string>
						</dict>
					</dict>
					<key>end</key>
					<string>"</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.haxe.2</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.haxe.2</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\.</string>
							<key>name</key>
							<string>constant.character.escape.haxe.2</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>'</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.haxe.2</string>
						</dict>
					</dict>
					<key>end</key>
					<string>'</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.haxe.2</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.haxe.2</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\.</string>
							<key>name</key>
							<string>constant.character.escape.haxe.2</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\$\$</string>
							<key>name</key>
							<string>constant.character.escape.haxe.2</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>variable.other.haxe.2</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>variable.other.haxe.2</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>variable.other.haxe.2</string>
								</dict>
								<key>4</key>
								<dict>
									<key>name</key>
									<string>variable.other.haxe.2</string>
								</dict>
							</dict>
							<key>comment</key>
							<string>String interpolation : "${test.ole}"</string>
							<key>match</key>
							<string>(\$)(\{)([^}]*)(\})</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>variable.other.haxe.2</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>variable.other.haxe.2</string>
								</dict>
							</dict>
							<key>comment</key>
							<string>String interpolation : "$test"</string>
							<key>match</key>
							<string>(\$)([\w]*)</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>support-class-name</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.package.haxe.2</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>support.class.haxe.2</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(([a-z][a-zA-Z0-9]*\.)*)(([A-Z]\w*\.?)+)\b</string>
		</dict>
		<key>type-abstract</key>
		<dict>
			<key>begin</key>
			<string>(?=abstract)</string>
			<key>end</key>
			<string>(?&lt;=\})|(;)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.terminator.haxe.2</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.type.abstract.haxe.2</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type-abstract-name</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type-abstract-name-post</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type-abstract-block</string>
				</dict>
			</array>
		</dict>
		<key>type-abstract-block</key>
		<dict>
			<key>begin</key>
			<string>(?&lt;=\{)</string>
			<key>end</key>
			<string>(\})</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.block.end.haxe.2</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.type.block.haxe.2</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#meta-static</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#method</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#modifiers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block-contents</string>
				</dict>
			</array>
		</dict>
		<key>type-abstract-name</key>
		<dict>
			<key>begin</key>
			<string>\b(abstract)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.class.haxe.2</string>
				</dict>
			</dict>
			<key>end</key>
			<string>([_A-Za-z]\w*)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.class.haxe.2</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.type.name.haxe.2</string>
		</dict>
		<key>type-abstract-name-post</key>
		<dict>
			<key>begin</key>
			<string>(?&lt;=\w)</string>
			<key>end</key>
			<string>([\{;])</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.block.begin.haxe.2</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#parameters</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keywords-abstract</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#punctuation-brackets</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#punctuation-separator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#support-class-name</string>
				</dict>
			</array>
		</dict>
		<key>type-class</key>
		<dict>
			<key>begin</key>
			<string>(?=class)</string>
			<key>end</key>
			<string>(?&lt;=\})|(;)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.terminator.haxe.2</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.type.class.haxe.2</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type-class-name</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type-class-name-post</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type-class-block</string>
				</dict>
			</array>
		</dict>
		<key>type-class-block</key>
		<dict>
			<key>begin</key>
			<string>(?&lt;=\{)</string>
			<key>end</key>
			<string>(\})</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.block.end.haxe.2</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.type.block.haxe.2</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#meta-static</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#method</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#modifiers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block-contents</string>
				</dict>
			</array>
		</dict>
		<key>type-class-name</key>
		<dict>
			<key>begin</key>
			<string>\b(class)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.class.haxe.2</string>
				</dict>
			</dict>
			<key>end</key>
			<string>([_A-Za-z]\w*)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.class.haxe.2</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.type.name.haxe.2</string>
		</dict>
		<key>type-class-name-post</key>
		<dict>
			<key>begin</key>
			<string>(?&lt;=\w)</string>
			<key>end</key>
			<string>([\{;])</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.block.begin.haxe.2</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type-parameters</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#modifiers-inheritance</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#punctuation-brackets</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#punctuation-separator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#support-class-name</string>
				</dict>
			</array>
		</dict>
		<key>type-enum</key>
		<dict>
			<key>begin</key>
			<string>(?=enum)</string>
			<key>end</key>
			<string>(?&lt;=\})|(;)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.terminator.haxe.2</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.type.enum.haxe.2</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type-enum-name</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type-enum-name-post</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type-enum-block</string>
				</dict>
			</array>
		</dict>
		<key>type-enum-block</key>
		<dict>
			<key>begin</key>
			<string>(?&lt;=\{)</string>
			<key>end</key>
			<string>(\})</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.block.end.haxe.2</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.type.block.haxe.2</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type-parameters</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block-contents</string>
				</dict>
			</array>
		</dict>
		<key>type-enum-name</key>
		<dict>
			<key>begin</key>
			<string>\b(enum)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.class.haxe.2</string>
				</dict>
			</dict>
			<key>end</key>
			<string>([_A-Za-z]\w*)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.class.haxe.2</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.type.name.haxe.2</string>
		</dict>
		<key>type-enum-name-post</key>
		<dict>
			<key>begin</key>
			<string>(?&lt;=\w)</string>
			<key>end</key>
			<string>([\{;])</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.block.begin.haxe.2</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type-parameters</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#punctuation-brackets</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#punctuation-separator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#support-class-name</string>
				</dict>
			</array>
		</dict>
		<key>type-interface</key>
		<dict>
			<key>begin</key>
			<string>(?=interface)</string>
			<key>end</key>
			<string>(?&lt;=\})|(;)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.terminator.haxe.2</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.type.interface.haxe.2</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type-interface-name</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type-interface-name-post</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type-interface-block</string>
				</dict>
			</array>
		</dict>
		<key>type-interface-block</key>
		<dict>
			<key>begin</key>
			<string>(?&lt;=\{)</string>
			<key>end</key>
			<string>(\})</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.block.end.haxe.2</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.type.block.haxe.2</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#method</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block-contents</string>
				</dict>
			</array>
		</dict>
		<key>type-interface-name</key>
		<dict>
			<key>begin</key>
			<string>\b(interface)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.class.haxe.2</string>
				</dict>
			</dict>
			<key>end</key>
			<string>([_A-Za-z]\w*)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.class.haxe.2</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.type.name.haxe.2</string>
		</dict>
		<key>type-interface-name-post</key>
		<dict>
			<key>begin</key>
			<string>(?&lt;=\w)</string>
			<key>end</key>
			<string>([\{;])</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.block.begin.haxe.2</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#modifiers-inheritance</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#punctuation-brackets</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#punctuation-separator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#support-class-name</string>
				</dict>
			</array>
		</dict>
		<key>type-parameters</key>
		<dict>
			<key>begin</key>
			<string>(\&lt;)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.begin.haxe.2</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\&gt;)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.end.haxe.2</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.type.parameters.haxe.2</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block-contents</string>
				</dict>
			</array>
		</dict>
		<key>type-typedef</key>
		<dict>
			<key>begin</key>
			<string>(?=typedef)</string>
			<key>end</key>
			<string>(?&lt;=\})|(;)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.terminator.haxe.2</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.type.typedef.haxe.2</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type-typedef-name</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type-typedef-name-post</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type-typedef-block</string>
				</dict>
			</array>
		</dict>
		<key>type-typedef-block</key>
		<dict>
			<key>begin</key>
			<string>(?&lt;=\{)</string>
			<key>end</key>
			<string>(\})</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.block.end.haxe.2</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.type.block.haxe.2</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block-contents</string>
				</dict>
			</array>
		</dict>
		<key>type-typedef-name</key>
		<dict>
			<key>begin</key>
			<string>\b(typedef)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.class.haxe.2</string>
				</dict>
			</dict>
			<key>end</key>
			<string>([_A-Za-z]\w*)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.class.haxe.2</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.type.name.haxe.2</string>
		</dict>
		<key>type-typedef-name-post</key>
		<dict>
			<key>begin</key>
			<string>(?&lt;=\w)</string>
			<key>end</key>
			<string>(\{)|(?=;)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.block.begin.haxe.2</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#punctuation-brackets</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#punctuation-separator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#operator-assignment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#support-class-name</string>
				</dict>
			</array>
		</dict>
		<key>variable</key>
		<dict>
			<key>begin</key>
			<string>(?=var|final)</string>
			<key>end</key>
			<string>(;)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.terminator.haxe.2</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.variable.haxe.2</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#variable-name</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable-assign</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable-name-post</string>
				</dict>
			</array>
		</dict>
		<key>variable-accessors</key>
		<dict>
			<key>begin</key>
			<string>(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.begin.haxe.2</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.end.haxe.2</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.parameters.haxe.2</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#operator-optional</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keywords-accessor</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#punctuation-separator</string>
				</dict>
			</array>
		</dict>
		<key>variable-assign</key>
		<dict>
			<key>begin</key>
			<string>(=)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.assignment.haxe.2</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=;)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block-contents</string>
				</dict>
			</array>
		</dict>
		<key>variable-name</key>
		<dict>
			<key>begin</key>
			<string>\b(var|final)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.variable.haxe.2</string>
				</dict>
			</dict>
			<key>end</key>
			<string>([_a-zA-Z]\w*)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.variable.haxe.2</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.variable.name.haxe.2</string>
		</dict>
		<key>variable-name-post</key>
		<dict>
			<key>begin</key>
			<string>(?&lt;=\w)</string>
			<key>end</key>
			<string>(?=;)|(?==)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#variable-accessors</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block-contents</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.haxe.2</string>
	<key>uuid</key>
	<string>fd62cd72-48d1-4e06-9ecd-76267656ac18</string>
</dict>
</plist>
